The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is an example text file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

    >>> matrix = [
    ... [1, 2, 3],
    ... [4, 5, 6]
    ... ]

    >>> wrong_matrix = [
    ... [1, 2, 3],
    ... [4, 6]
    ... ]

    >>> wrong_matrix_2 = [
    ... [1, 3],
    ... [4, 5, 6]
    ... ]

    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> print(matrix_divided(matrix, 1))
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
    >>> print(matrix_divided(matrix, 9))
    [[0.11, 0.22, 0.33], [0.44, 0.56, 0.67]]
    >>> try:
    ...     print(matrix_divided(None, 2))
    ... except Exception as e:
    ...     print(e)
    matrix must be a matrix (list of lists) of integers/floats
    >>> try:
    ...     print(matrix_divided(matrix, 0))
    ... except Exception as e:
    ...     print(e)
    division by zero
    >>> try:
    ...     print(matrix_divided(matrix, 'a'))
    ... except Exception as e:
    ...     print(e)
    div must be a number
    >>> try:
    ...     print(matrix_divided(wrong_matrix, 2))
    ... except Exception as e:
    ...     print(e)
    Each row of the matrix must have the same size
    >>> try:
    ...     print(matrix_divided(wrong_matrix_2, 2))
    ... except Exception as e:
    ...     print(e)
    Each row of the matrix must have the same size
